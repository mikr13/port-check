name: Publish Packages

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "24"
          registry-url: "https://registry.npmjs.org"

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update package versions
        run: |
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.version.outputs.VERSION }}\"/" package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"${{ steps.version.outputs.VERSION }}\"/" alias-port-check/package.json
          sed -i "s/\"@mikr13\/port-check\": \"[^\"]*\"/\"@mikr13\/port-check\": \"^${{ steps.version.outputs.VERSION }}\"/" alias-port-check/package.json

      - name: Install dependencies
        run: bun install

      - name: Publish @mikr13/port-check
        run: bun publish -p --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Wait for registry propagation
        run: sleep 60

      - name: Verify package availability
        run: |
          echo "Checking if @mikr13/port-check@${{ steps.version.outputs.VERSION }} is available..."
          for i in {1..5}; do
            if bun pm ls @mikr13/port-check@${{ steps.version.outputs.VERSION }} --registry https://registry.npmjs.org/ >/dev/null 2>&1; then
              echo "Package is available!"
              break
            else
              echo "Attempt $i: Package not yet available, waiting 30 seconds..."
              if [ $i -lt 5 ]; then
                sleep 30
              else
                echo "Package still not available after 5 attempts"
                exit 1
              fi
            fi
          done

      - name: Install dependencies in alias-port-check
        run: |
          cd alias-port-check
          for i in {1..3}; do
            echo "Installation attempt $i..."
            if bun install; then
              echo "Installation successful!"
              break
            else
              echo "Installation failed, attempt $i"
              if [ $i -lt 3 ]; then
                echo "Waiting 30 seconds before retry..."
                sleep 30
              else
                echo "All installation attempts failed"
                exit 1
              fi
            fi
          done

      - name: Publish port-inspect
        run: |
          cd alias-port-check
          bun publish -p --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Commit version changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json alias-port-check/package.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.VERSION }}"
          git push origin main
